# .github/.github/workflows/reusable-workflows/dotnet-ci.yml
name: dotnet-ci

on:
  workflow_call:
    inputs:
      nuget-packageid:
        required: true
        description: The PackageId for the NuGet package (i.e. "Henke.TemplateGenerator").
        type: string
      test-step:
        required: false
        default: false
        description: Whether to run the test step.
        type: boolean
    secrets:
      GITHUB_TOKEN:
        required: true
      NUGET_API_KEY:
        required: true

jobs:
  ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh
    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: true
      NuGetDirectory: ${{ github.workspace }}/nuget

    steps:
      - uses: actions/checkout@v4

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "10.0.x"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Run tests
        if: inputs.test-step == true
        run: dotnet test --no-build --configuration Release --logger:junit --results-directory ./artifacts

      - name: Report test results
        if: always() && inputs.test-step == true
        uses: dorny/test-reporter@v2
        with:
          name: .NET Tests
          path: './artifacts/*.xml'
          reporter: java-junit

      - name: Pack NuGet package
        run: dotnet pack --no-build --configuration Release --output ./artifacts

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: ./artifacts/*.nupkg
          retention-days: 7

  publish-package:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh
    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: true
      NuGetDirectory: ${{ github.workspace }}/nuget

    needs: [ci]

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: nuget-packages
          path: ${{ env.NuGetDirectory }}

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4

      - name: Publish NuGet package
        run: |
          foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ secrets.NUGET_API_KEY }}" --source https://api.nuget.org/v3/index.json
          }

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## Changes in ${{ github.ref_name }}

            NuGet package published to NuGet.org

            ### Installation
            ```xml
            <PackageReference Include="${{ inputs.nuget-packageid }}" Version="${{ github.ref_name }}" />
            ```
          draft: false
          prerelease: false
